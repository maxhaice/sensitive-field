(function() {
  var createSVG, generateVertices, timeoutId, update, vertices;

  createSVG = function() {
    var bounds, container, g, height, svg, width;
    container = d3.select('.container');
    bounds = container.node().getBoundingClientRect();
    width = bounds.width;
    height = bounds.height;
    svg = container.append('svg').attr({width, height});
    g = svg.append('g');
    svg.on('mousemove', function() {
      vertices[0] = d3.mouse(this);
      return update(g, vertices);
    });
    return g;
  };

  generateVertices = function() {
    var bounds, container, height, width, xScale, yScale;
    container = d3.select('.container');
    bounds = container.node().getBoundingClientRect();
    width = bounds.width;
    height = bounds.height;
    xScale = d3.scale.linear().domain([0, width]).nice();
    yScale = d3.scale.linear().domain([0, height]).nice();
    return [].concat(xScale.ticks(10).map(function(t) {
      return [t, 0];
    })).concat(yScale.ticks(5).map(function(t) {
      return [width, t];
    })).concat(xScale.ticks(10).map(function(t) {
      return [t, height];
    })).concat(yScale.ticks(5).map(function(t) {
      return [0, t];
    })).concat(d3.range(30).map(function(d, i) {
      return [Math.random() * width, Math.random() * height];
    }));
  };

  update = function(g, vertices) {
    var data, path;
    data = d3.geom.delaunay(vertices);
    data = data.map(function(d) {
      return 'M' + d.join('L') + 'Z';
    });
    path = g.selectAll('path').data(data, String);
    path.exit().remove();
    path.enter().append('path').attr('class', function(d, i) {
      return `triangle_${i % 9}`;
    }).attr('d', String);
  };

  vertices = generateVertices();

  update(createSVG(vertices), vertices);

  timeoutId = null;

  window.addEventListener('resize', function() {
    if (timeoutId != null) {
      window.clearTimeout(timeoutId);
    }
    return timeoutId = setTimeout(function() {
      d3.select('.container *').remove();
      vertices = generateVertices();
      return update(createSVG(vertices), vertices);
    }, 100);
  });

}).call(this);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiPGFub255bW91cz4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQSxNQUFBLFNBQUEsRUFBQSxnQkFBQSxFQUFBLFNBQUEsRUFBQSxNQUFBLEVBQUE7O0VBQUEsU0FBQSxHQUFZLFFBQUEsQ0FBQSxDQUFBO0FBQ1YsUUFBQSxNQUFBLEVBQUEsU0FBQSxFQUFBLENBQUEsRUFBQSxNQUFBLEVBQUEsR0FBQSxFQUFBO0lBQUEsU0FBQSxHQUFZLEVBQUUsQ0FBQyxNQUFILENBQVUsWUFBVjtJQUVaLE1BQUEsR0FBUyxTQUFTLENBQUMsSUFBVixDQUFBLENBQWdCLENBQUUscUJBQWxCLENBQUE7SUFDVCxLQUFBLEdBQVEsTUFBTSxDQUFDO0lBQ2YsTUFBQSxHQUFTLE1BQU0sQ0FBQztJQUVoQixHQUFBLEdBQU0sU0FDSixDQUFDLE1BREcsQ0FDSSxLQURKLENBRUYsQ0FBQyxJQUZDLENBRUksQ0FBQyxLQUFELEVBQVEsTUFBUixDQUZKO0lBSU4sQ0FBQSxHQUFJLEdBQUcsQ0FBQyxNQUFKLENBQVcsR0FBWDtJQUVKLEdBQUcsQ0FBQyxFQUFKLENBQU8sV0FBUCxFQUFvQixRQUFBLENBQUEsQ0FBQTtNQUNsQixRQUFTLENBQUEsQ0FBQSxDQUFULEdBQWMsRUFBRSxDQUFDLEtBQUgsQ0FBUyxJQUFUO2FBQ2QsTUFBQSxDQUFPLENBQVAsRUFBVSxRQUFWO0lBRmtCLENBQXBCO0FBS0EsV0FBTztFQWxCRzs7RUFxQlosZ0JBQUEsR0FBbUIsUUFBQSxDQUFBLENBQUE7QUFDakIsUUFBQSxNQUFBLEVBQUEsU0FBQSxFQUFBLE1BQUEsRUFBQSxLQUFBLEVBQUEsTUFBQSxFQUFBO0lBQUEsU0FBQSxHQUFZLEVBQUUsQ0FBQyxNQUFILENBQVUsWUFBVjtJQUVaLE1BQUEsR0FBUyxTQUFTLENBQUMsSUFBVixDQUFBLENBQWdCLENBQUUscUJBQWxCLENBQUE7SUFDVCxLQUFBLEdBQVEsTUFBTSxDQUFDO0lBQ2YsTUFB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RUFBRSxDQUFDLE1BQUgsQ0FBVSxjQUFWLENBQXlCLENBQUMsTUFBMUIsQ0FBQTtNQUNBLFFBQUEsR0FBVyxnQkFBQSxDQUFBO2FBQ1gsTUFBQSxDQUFPLFNBQUEsQ0FBVSxRQUFWLENBQVAsRUFBNEIsUUFBNUI7SUFIRixDQURVLEVBS1YsR0FMVTtFQUhvQixDQUFsQztBQTdEQSIsInNvdXJjZXNDb250ZW50IjpbImNyZWF0ZVNWRyA9IC0+XG4gIGNvbnRhaW5lciA9IGQzLnNlbGVjdCgnLmNvbnRhaW5lcicpXG5cbiAgYm91bmRzID0gY29udGFpbmVyLm5vZGUoKS4gZ2V0Qm91bmRpbmdDbGllbnRSZWN0KClcbiAgd2lkdGggPSBib3VuZHMud2lkdGhcbiAgaGVpZ2h0ID0gYm91bmRzLmhlaWdodFxuICBcbiAgc3ZnID0gY29udGFpbmVyXG4gICAgLmFwcGVuZCgnc3ZnJylcbiAgICAgIC5hdHRyKHt3aWR0aCwgaGVpZ2h0fSlcbiAgXG4gIGcgPSBzdmcuYXBwZW5kKCdnJylcblxuICBzdmcub24oJ21vdXNlbW92ZScsIC0+XG4gICAgdmVydGljZXNbMF0gPSBkMy5tb3VzZSh0aGlzKVxuICAgIHVwZGF0ZShnLCB2ZXJ0aWNlcylcbiAgKVxuICBcbiAgcmV0dXJuIGdcblxuXG5nZW5lcmF0ZVZlcnRpY2VzID0gLT5cbiAgY29udGFpbmVyID0gZDMuc2VsZWN0KCcuY29udGFpbmVyJylcblxuICBib3VuZHMgPSBjb250YWluZXIubm9kZSgpLiBnZXRCb3VuZGluZ0NsaWVudFJlY3QoKVxuICB3aWR0aCA9IGJvdW5kcy53aWR0aFxuICBoZWlnaHQgPSBib3VuZHMuaGVpZ2h0XG5cbiAgeFNjYWxlID0gZDMuc2NhbGUubGluZWFyKCkuZG9tYWluKFswLCB3aWR0aF0pLm5pY2UoKVxuICB5U2NhbGUgPSBkMy5zY2FsZS5saW5lYXIoKS5kb21haW4oWzAsIGhlaWdodF0pLm5pY2UoKVxuXG4gIHJldHVybiBbXVxuICAgIC5jb25jYXQoeFNjYWxlLnRpY2tzKDEwKS5tYXAgKHQpIC0+IFt0LCAwXSlcbiAgICAuY29uY2F0KHlTY2FsZS50aWNrcyg1KS5tYXAgKHQpIC0+IFt3aWR0aCwgdF0pXG4gICAgLmNvbmNhdCh4U2NhbGUudGlja3MoMTApLm1hcCAodCkgLT4gW3QsIGhlaWdodF0pXG4gICAgLmNvbmNhdCh5U2NhbGUudGlja3MoNSkubWFwICh0KSAtPiBbMCwgdF0pXG4gICAgLmNvbmNhdChkMy5yYW5nZSgzMCkubWFwIChkLCBpKSAtPltNYXRoLnJhbmRvbSgpICogd2lkdGgsIE1hdGgucmFuZG9tKCkgKiBoZWlnaHRdKVxuICBcbiAgXG5cbnVwZGF0ZSA9IChnLCB2ZXJ0aWNlcykgLT5cbiAgZGF0YSA9IGQzLmdlb20uZGVsYXVuYXkodmVydGljZXMpXG4gIFxuICBcbiAgZGF0YSA9IGRhdGEubWFwKChkKSAtPidNJyArIGQuam9pbignTCcpICsgJ1onKVxuICBwYXRoID0gZy5zZWxlY3RBbGwoJ3BhdGgnKS5kYXRhKGRhdGEsIFN0cmluZylcblxuICBwYXRoLmV4aXQoKS5yZW1vdmUoKVxuICBcbiAgcGF0aC5lbnRlcigpXG4gICAgLmFwcGVuZCgncGF0aCcpXG4gICAgICAuYXR0cignY2xhc3MnLCAoZCwgaSkgLT4gXCJ0cmlhbmdsZV8je2klOX1cIilcbiAgICAgIC5hdHRyKCdkJywgU3RyaW5nKVxuICAgICAgXG4gIHJldHVyblxuXG5cbnZlcnRpY2VzID0gZ2VuZXJhdGVWZXJ0aWNlcygpXG51cGRhdGUoY3JlYXRlU1ZHKHZlcnRpY2VzKSwgdmVydGljZXMpXG5cbnRpbWVvdXRJZCA9IG51bGxcbndpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCAtPlxuICB3aW5kb3cuY2xlYXJUaW1lb3V0KHRpbWVvdXRJZCkgaWYgdGltZW91dElkP1xuICBcbiAgdGltZW91dElkID0gc2V0VGltZW91dChcbiAgICAtPlxuICAgICAgZDMuc2VsZWN0KCcuY29udGFpbmVyIConKS5yZW1vdmUoKVxuICAgICAgdmVydGljZXMgPSBnZW5lcmF0ZVZlcnRpY2VzKClcbiAgICAgIHVwZGF0ZShjcmVhdGVTVkcodmVydGljZXMpLCB2ZXJ0aWNlcylcbiAgICAxMDBcbiAgKVxuKSJdfQ==
//# sourceURL=coffeescript